# ---- Base Node with Deps ----
  FROM node:18-slim AS base
  RUN apt-get update -y && apt-get install -y openssl

  WORKDIR /usr/src/app

  # build with
  # docker build \
  #   --build-arg COMMIT=$(git rev-parse HEAD) \
  #   --build-arg VECTOR_TILE_URL=<url of the vector service> \
  #   --build-arg MAPTILER_STYLE_KEY=<maptiler style key> \
  #   --build-arg ADFS_ID=<adfs client id> \
  #   --build-arg ADFS_SECRET=<adfs secret> \
  #   --build-arg ADFS_ISSUER=<adfs issuer> \
  #   --build-arg NEXTAUTH_SECRET=<nextauth secret> \
  #   --build-arg NEXTAUTH_URL=<nextauth url>
  ARG COMMIT
  ARG VECTOR_TILE_URL
  ARG MAPTILER_STYLE_KEY
  ARG ADFS_ID
  ARG ADFS_SECRET
  ARG ADFS_ISSUER
  ARG NEXTAUTH_SECRET
  ARG NEXTAUTH_URL

  COPY --chown=node:node package.json yarn.lock ./
  COPY --chown=node:node app/package.json ./app/

  RUN yarn install --frozen-lockfile

  # ---- Copy Files/Build ----
  FROM base AS build
  WORKDIR /usr/src/app

  ENV NODE_ENV production
  ENV NODE_OPTIONS=--max_old_space_size=2048
  ENV NEXT_PUBLIC_COMMIT=$COMMIT
  ENV NEXT_PUBLIC_BASE_VECTOR_TILE_URL=$VECTOR_TILE_URL
  ENV NEXT_PUBLIC_MAPTILER_STYLE_KEY=$MAPTILER_STYLE_KEY
  ENV ADFS_ID=$ADFS_ID
  ENV ADFS_SECRET=$ADFS_SECRET
  ENV ADFS_ISSUER=$ADFS_ISSUER
  ENV NEXTAUTH_SECRET=$NEXTAUTH_SECRET
  ENV NEXTAUTH_URL=$NEXTAUTH_URL
  ENV PORT 3000

  COPY ./ ./

  RUN yarn prisma generate
  RUN yarn build

  # ---- Release ----
  FROM node:18-slim AS release
  WORKDIR /usr/src/app

  COPY --from=build /usr/src/app/build ./build
  COPY --from=base /usr/src/app/node_modules ./node_modules
  COPY package.json ./

  USER node

  # Install only prod dependencies and start app
  RUN yarn install --frozen-lockfile --production && yarn cache clean

  EXPOSE 3000

  CMD npm start