scalar Observation
scalar DimensionValue
scalar FilterValue
scalar RawObservation
scalar Filters
scalar GeoShapes
scalar ValueIdentifier
scalar ValuePosition

type ObservationsQuery {
  "Observations with their values parsed to native JS types"
  data: [Observation!]!
  "Observations with their original RDF-y type"
  rawData: [RawObservation!]!
  "The generated SPARQL query string of the current query (doesn't fetch any data)"
  sparql: String!
  "The generated SPARQL query URL of the current query to run a query on the endpoint's editor directly"
  sparqlEditorUrl: String
}

enum DataCubePublicationStatus {
  DRAFT
  PUBLISHED
}

enum ScaleType {
  Ordinal
  Nominal
  Interval
  Ratio
}

type DataCube {
  iri: String!
  identifier: String
  title: String!
  version: String
  contactName: String
  contactEmail: String
  creator: DataCubeOrganization
  landingPage: String
  workExamples: [String]
  publisher: String
  description: String
  datePublished: String
  dateModified: String
  expires: String
  publicationStatus: DataCubePublicationStatus!
  observations(
    sourceType: String!
    sourceUrl: String!
    limit: Int
    componentIris: [String!]
    filters: Filters
  ): ObservationsQuery!
  dimensions(
    sourceType: String!
    sourceUrl: String!
    componentIris: [String!]
    disableValuesLoad: Boolean
  ): [Dimension!]!
  dimensionByIri(
    iri: String!
    sourceType: String!
    sourceUrl: String!
  ): Dimension
  measures(
    sourceType: String!
    sourceUrl: String!
    componentIris: [String!]
    disableValuesLoad: Boolean
  ): [Measure!]!
  themes: [DataCubeTheme!]!
}

type RelatedDimension {
  type: String!
  iri: String!
}

type HierarchyValue {
  value: String!
  label: String!
  alternateName: String
  position: ValuePosition
  identifier: ValueIdentifier
  dimensionIri: String!
  depth: Int!
  children: [HierarchyValue!]
  hasValue: Boolean
}

interface Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

type GeoCoordinates {
  iri: String!
  label: String!
  latitude: Float!
  longitude: Float!
}

type GeoCoordinatesDimension implements Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  geoCoordinates: [GeoCoordinates!]
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

type ObservationFilter {
  type: String!
  value: FilterValue
  iri: String!
}

type GeoShapesDimension implements Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  geoShapes: GeoShapes
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

type NominalDimension implements Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

type OrdinalDimension implements Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

type StandardErrorDimension implements Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

enum TimeUnit {
  Year
  Month
  Week
  Day
  Hour
  Minute
  Second
}

type TemporalDimension implements Dimension {
  iri: String!
  label: String!
  description: String
  timeUnit: TimeUnit!
  timeFormat: String!
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

type TemporalOrdinalDimension implements Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

union Measure = NumericalMeasure | OrdinalMeasure

type NumericalMeasure implements Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  isCurrency: Boolean
  isDecimal: Boolean
  currencyExponent: Int
  resolution: Int
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

type OrdinalMeasure implements Dimension {
  iri: String!
  label: String!
  description: String
  unit: String
  scaleType: ScaleType
  dataType: String
  order: Int
  isNumerical: Boolean!
  isKeyDimension: Boolean!
  values(
    sourceType: String!
    sourceUrl: String!
    filters: Filters
    disableLoad: Boolean
  ): [DimensionValue!]!
  related: [RelatedDimension!]
  hierarchy(sourceType: String!, sourceUrl: String!): [HierarchyValue!]
}

scalar SearchCube

type SearchCubeResult {
  score: Float
  cube: SearchCube!
  highlightedTitle: String
  highlightedDescription: String
}

type DataCubeTheme {
  iri: String!
  label: String
}

type DataCubeOrganization {
  iri: String!
  label: String
}

input SearchCubeFilter {
  type: String!
  label: String
  value: String!
}

enum SearchCubeResultOrder {
  SCORE
  TITLE_ASC
  CREATED_DESC
}

# The "Query" type is special: it lists all of the available queries that
# clients can execute, along with the return type for each.
type Query {
  dataCubeByIri(
    sourceType: String!
    sourceUrl: String!
    locale: String
    iri: String!
    latest: Boolean = true
    filters: Filters
    componentIris: [String!]
    disableValuesLoad: Boolean
  ): DataCube
  possibleFilters(
    iri: String!
    sourceType: String!
    sourceUrl: String!
    filters: Filters!
  ): [ObservationFilter!]!
  searchCubes(
    sourceType: String!
    sourceUrl: String!
    locale: String
    query: String
    order: SearchCubeResultOrder
    includeDrafts: Boolean
    filters: [SearchCubeFilter!]
  ): [SearchCubeResult!]!
}
